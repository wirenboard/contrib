Origin: https://github.com/curl/curl/commit/7214288898f5625a6cc196e22a74232eada7861c
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2021-05-15

From 7214288898f5625a6cc196e22a74232eada7861c Mon Sep 17 00:00:00 2001
From: Viktor Szakats <commit@vsz.me>
Date: Tue, 23 Feb 2021 14:54:46 +0100
Subject: [PATCH] transfer: strip credentials from the auto-referer header
 field

Added test 2081 to verify.

CVE-2021-22876

Bug: https://curl.se/docs/CVE-2021-22876.html
---
 lib/transfer.c          | 25 ++++++++++++++--
 tests/data/Makefile.inc |  2 +-
 tests/data/test2081     | 66 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 90 insertions(+), 3 deletions(-)
 create mode 100644 tests/data/test2081

Index: curl-7.52.1/tests/data/test2081
===================================================================
--- /dev/null
+++ curl-7.52.1/tests/data/test2081
@@ -0,0 +1,67 @@
+<testcase>
+<info>
+<keywords>
+HTTP
+HTTP GET
+referer
+followlocation
+--write-out
+</keywords>
+</info>
+
+# Server-side
+<reply>
+<data nocheck="yes">
+HTTP/1.1 301 This is a weirdo text message swsclose
+Location: data/20810002.txt?coolsite=yes
+Content-Length: 62
+Connection: close
+
+This server reply is for testing a simple Location: following
+</data>
+</reply>
+
+# Client-side
+<client>
+<server>
+http
+</server>
+ <name>
+Automatic referrer credential and anchor stripping check
+ </name>
+ <command>
+http://user:pass@%HOSTIP:%HTTPPORT/we/want/our/2081#anchor --location --referer ';auto'
+</command>
+</client>
+
+# Verify data after the test has been "shot"
+<verify>
+<strip>
+^User-Agent:.*
+</strip>
+<errorcode>
+52
+</errorcode>
+<protocol>
+GET /we/want/our/2081 HTTP/1.1
+Host: %HOSTIP:%HTTPPORT
+Authorization: Basic dXNlcjpwYXNz
+Accept: */*
+Referer: 
+
+GET /we/want/our/data/20810002.txt?coolsite=yes HTTP/1.1
+Host: %HOSTIP:%HTTPPORT
+Authorization: Basic dXNlcjpwYXNz
+Accept: */*
+Referer: http://%HOSTIP:%HTTPPORT/we/want/our/2081
+
+</protocol>
+<stdout>
+HTTP/1.1 301 This is a weirdo text message swsclose
+Location: data/20810002.txt?coolsite=yes
+Content-Length: 62
+Connection: close
+
+</stdout>
+</verify>
+</testcase>
Index: curl-7.52.1/tests/data/Makefile.inc
===================================================================
--- curl-7.52.1.orig/tests/data/Makefile.inc
+++ curl-7.52.1/tests/data/Makefile.inc
@@ -179,4 +179,6 @@ test2016 test2017 test2018 test2019 test
 test2024 test2025 test2026 test2027 test2028 test2029 test2030 test2031 \
 test2032 test2033 test2034 test2035 test2036 test2037 test2038 test2039 \
 test2040 test2041 test2042 test2043 test2044 test2045 test2046 test2047 \
-test2048 test2049 test2050 test2051 test2052 test2053 test2054
+test2048 test2049 test2050 test2051 test2052 test2053 test2054 \
+\
+test2081
Index: curl-7.52.1/lib/transfer.c
===================================================================
--- curl-7.52.1.orig/lib/transfer.c
+++ curl-7.52.1/lib/transfer.c
@@ -1649,6 +1649,7 @@ CURLcode Curl_follow(struct Curl_easy *d
 
   /* Location: redirect */
   bool disallowport = FALSE;
+  CURLUcode uc;
 
   if(type == FOLLOW_REDIR) {
     if((data->set.maxredirs != -1) &&
@@ -1663,6 +1664,9 @@ CURLcode Curl_follow(struct Curl_easy *d
     data->set.followlocation++; /* count location-followers */
 
     if(data->set.http_auto_referer) {
+        CURLU *u;
+        char *referer;
+
       /* We are asked to automatically set the previous URL as the referer
          when we get the next URL. We pick the ->url field, which may or may
          not be 100% correct */
@@ -1672,9 +1676,27 @@ CURLcode Curl_follow(struct Curl_easy *d
         data->change.referer_alloc = FALSE;
       }
 
-      data->change.referer = strdup(data->change.url);
-      if(!data->change.referer)
-        return CURLE_OUT_OF_MEMORY;
+      /* Make a copy of the URL without crenditals and fragment */
+      u = curl_url();
+      if(!u)
+          return CURLE_OUT_OF_MEMORY;
+
+      uc = curl_url_set(u, CURLUPART_URL, data->change.url, 0);
+      if(!uc)
+          uc = curl_url_set(u, CURLUPART_FRAGMENT, NULL, 0);
+      if(!uc)
+          uc = curl_url_set(u, CURLUPART_USER, NULL, 0);
+      if(!uc)
+          uc = curl_url_set(u, CURLUPART_PASSWORD, NULL, 0);
+      if(!uc)
+          uc = curl_url_get(u, CURLUPART_URL, &referer, 0);
+
+      curl_url_cleanup(u);
+
+      if(uc || referer == NULL)
+          return CURLE_OUT_OF_MEMORY;
+
+      data->change.referer = referer;
       data->change.referer_alloc = TRUE; /* yes, free this later */
     }
   }
